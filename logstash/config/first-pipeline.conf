input {
    beats {
        port => "5044"
    }
}
# The filter part of this file is commented out to indicate that it is
# optional
# this is the grok filter for the istio-reverse proxy access log
 filter {
   grok {
 match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] \"%{DATA:method} (?:%{URIPATH:uri_path}(?:%{URIPARAM:uri_param})?|%{DATA:}) %{DATA:protocol}\" %{DATA:response_code} %{DATA:response_flags} %{DATA:response_code_details} %{DATA:connection_termination_details} %{DATA:upstream_transport_failure_reason} %{DATA:envoy_upstream_service_time} %{NUMBER:bytes_sent} %{NUMBER:bytes_received} %{NUMBER:duration} \"%{IPORHOST:clientIp}\" \"%{DATA:user_agent}\" \"%{UUID:request_id}\" \"%{DATA:authority}\" \"%{DATA:upstream_host}\" %{GREEDYDATA:upstream_cluster} %{DATA:upstream_local_address} %{DATA:downstream_local_address} %{DATA:downstream_remote_address} %{DATA:requested_server_name} %{DATA:route_name}"   }
   }
    mutate {
   convert => ["duration", "float"]
 }
 geoip {
   source => "[clientIp]"
   target => "[geoip]"
   add_tag => [ "istio-geoip" ]
 }
 
date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
 
 useragent {
   source => "user_agent"
 }
}
output {
     elasticsearch {
   hosts => ["localhost:9200"]
   #please create index template first let us say istio4 with pattern istio4-*
   #Template is required bz elastic search will not map the [geoIp.loction] to geo_point data type
   # this is very difficult to find while following some articles , thank me later.
   index => "istio4-%{+YYYY.MM.dd}"
   document_type => "_doc"
 }
    stdout { codec => rubydebug }
}